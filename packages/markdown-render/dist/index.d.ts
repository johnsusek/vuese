// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../../../../../../@vuese/parser
//   ../../../../../../@vuese/markdown-render

declare module '@vuese/markdown-render' {
    import { ParserResult, MixInResult, PropsResult, SlotResult, EventResult, DataResult, MethodResult, ComputedResult, WatchResult } from '@vuese/parser';
    import { MarkdownResult } from '@vuese/markdown-render/renderMarkdown';
    export { MarkdownResult };
    interface RenderOptions {
        props: string[];
        slots: string[];
        events: string[];
        methods: string[];
        computed: string[];
        mixIns: string[];
        data: string[];
        watch: string[];
    }
    export interface RenderResult {
        props?: string;
        slots?: string;
        events?: string;
        methods?: string;
        computed?: string;
        mixIns?: string;
        data?: string;
        watch?: string;
    }
    export class Render {
        parserResult: ParserResult;
        options?: RenderOptions | undefined;
        constructor(parserResult: ParserResult, options?: RenderOptions | undefined);
        render(): RenderResult;
        propRender(propsRes: PropsResult[]): string;
        slotRender(slotsRes: SlotResult[]): string;
        eventRender(propsRes: EventResult[]): string;
        methodRender(methodsRes: MethodResult[]): string;
        computedRender(computedRes: ComputedResult[]): string;
        mixInRender(mixInsRes: MixInResult[]): string;
        dataRender(dataRes: DataResult[]): string;
        watchRender(watchRes: WatchResult[]): string;
        renderTabelHeader(header: string[]): string;
        renderTabelRow(row: string[]): string;
        renderSplitLine(num: number): string;
        renderMarkdown(): MarkdownResult | null;
    }
    export default Render;
}

declare module '@vuese/markdown-render/renderMarkdown' {
    import { ParserResult } from '@vuese/parser';
    import { RenderResult } from '@vuese/markdown-render';
    export interface MarkdownResult {
        content: string;
        componentName: string;
        groupName: string;
    }
    export default function (renderRes: RenderResult, parserRes: ParserResult): MarkdownResult | null;
}

